name: CI/CD - LixoZero

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Instalar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restaurar dependências
        run: dotnet restore LixoZero.csproj

      - name: Limpar diretórios temporários
        run: dotnet clean

      - name: Compilar o projeto
        run: dotnet build LixoZero.csproj --configuration Release --no-restore

      - name: Executar testes
        run: dotnet test tests/LixoZero.Tests.csproj --configuration Release --logger "trx;LogFileName=test-results.trx"

      - name: Upload dos resultados de teste (TRX)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
<<<<<<< HEAD
          path: "**/test-results.trx"
=======
          path: "**/*.trx"
>>>>>>> f2ddd91 (melhorias para a fase 7)

      - name: Publicar aplicação
        run: dotnet publish LixoZero.csproj -c Release -o ./out --no-build

      - name: Upload da build (artefato)
        uses: actions/upload-artifact@v4
        with:
          name: LixoZero-Build
          path: ./out

  publish-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Metadados da imagem
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=raw,value=latest

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy-staging:
    needs: publish-image
    runs-on: ubuntu-latest
    environment: staging
    if: ${{ secrets.SSH_HOST && secrets.SSH_USER && secrets.SSH_KEY && secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD }}
    steps:
      - name: Deploy via SSH (docker pull/run)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -e
            IMAGE="ghcr.io/${{ github.repository }}:sha-${{ github.sha }}"
            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ghcr.io -u "${{ secrets.REGISTRY_USERNAME }}" --password-stdin
            docker pull "$IMAGE"
            docker rm -f lixozero-api || true
            docker run -d --name lixozero-api \
              -p 80:8080 \
              -e ASPNETCORE_URLS=http://+:8080 \
              -e ASPNETCORE_ENVIRONMENT=Production \
              -v /opt/lixozero/Data/lixoZero.db:/app/lixoZero.db \
              "$IMAGE"
