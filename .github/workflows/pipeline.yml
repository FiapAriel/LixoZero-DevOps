name: CI/CD - LixoZero

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4

      - name: Instalar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restaurar dependências
        run: dotnet restore LixoZero.sln

      - name: Compilar o projeto (Release)
        run: dotnet build LixoZero.sln --configuration Release --no-restore

      - name: Executar testes (Release, sem rebuild)
        run: dotnet test tests/LixoZero.Tests.csproj -c Release --no-build --verbosity normal

      - name: Publicar aplicação (sem rebuild)
        run: dotnet publish ./LixoZero.csproj -c Release --no-build -o ./out

      - name: Upload da build (artefato)
        uses: actions/upload-artifact@v4
        with:
          name: LixoZero-Build
          path: ./out

  build_image:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # necessário para publicar no GHCR
    steps:
      - uses: actions/checkout@v4

      - name: Login no GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (staging + sha)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/lixozero:staging
            ghcr.io/${{ github.repository_owner }}/lixozero:${{ github.sha }}

      - name: Build & Push (latest - produção)
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/lixozero:latest

  deploy_staging:
    needs: [build_image]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Deploy staging via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            docker pull ghcr.io/${{ github.repository_owner }}/lixozero:staging
            docker rm -f lixozero || true
            docker run -d --name lixozero -p 8080:8080 \
              -e ASPNETCORE_URLS=http://+:8080 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository_owner }}/lixozero:staging

  deploy_production:
    if: github.ref == 'refs/heads/main'
    needs: [build_image]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy produção via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            docker pull ghcr.io/${{ github.repository_owner }}/lixozero:latest
            docker rm -f lixozero || true
            docker run -d --name lixozero -p 8080:8080 \
              -e ASPNETCORE_URLS=http://+:8080 \
              --restart unless-stopped \
              ghcr.io/${{ github.repository_owner }}/lixozero:latest
